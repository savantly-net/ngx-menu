{"version":3,"sources":["menu.service.ts"],"names":[],"mappings":"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","file":"menu.service.js","sourceRoot":"","sourcesContent":["import { IUser, SecurityService } from '@savantly/ngx-security';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport'rxjs/add/observable/of';\n\nexport const /** @type {?} */ defaultMenuId = 'mainMenu';\n\nexport interface IMenu {\n  id: string;\n  text: string;\n  isPublic: boolean;\n  roles: string[];\n  items: IMenu[];\n  position: number;\n  disabled: boolean;\n  icon: string;\n  callback: (event: any) => void;\n  addMenuItem: (item: any) => IMenu;\n  removeMenuItem: (id: string) => boolean;\n  getMenuItem: (id: string) => IMenu;\n}\nexport class Menu implements IMenu {\n  id: string;\n  text: string;\n  isPublic: boolean;\n  roles: string[];\n  items: IMenu[];\n  position: number;\n  callback: (event: any) => void;\n  disabled: boolean;\n  icon: string;\n/**\n * @param {?} item\n * @return {?}\n */\naddMenuItem(item: IMenu) {\n    if (this.items.findIndex(x => x.id === item.id) > -1) {\n      throw new Error('Item with this id: \"' + item.id + '\" already exists in menu: ' + this.id);\n    } else {\n      this.items.push(item);\n    }\n    const /** @type {?} */ index = this.items.findIndex(x => x.id === item.id);\n    return this.items[index];\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nremoveMenuItem(id: string): boolean {\n    const /** @type {?} */ index = this.items.findIndex(x => x.id === id);\n    if (index === -1) {\n      throw new Error('Item with this id doesn\\'t exist' + id);\n    } else {\n      this.items.slice(index, 1);\n    }\n    return true;\n  }\n/**\n * @param {?} id\n * @return {?}\n */\ngetMenuItem(id: string): IMenu {\n    const /** @type {?} */ index = this.items.findIndex(x => x.id === id);\n    if (index === -1) {\n      throw new Error('Menu item was not found: ' + id);\n    } else {\n      return this.items[index];\n    }\n  }\n/**\n * @param {?} options\n */\nconstructor (options: any) {\n    this.id = options.id || defaultMenuId;\n    this.isPublic = options.isPublic || true;\n    this.items = options.items || [];\n    this.roles = options.roles || ['*'];\n    this.text = options.text || 'unamed menu item';\n    this.callback = options.callback;\n  }\n}\n\nfunction Menu_tsickle_Closure_declarations() {\n/** @type {?} */\nMenu.prototype.id;\n/** @type {?} */\nMenu.prototype.text;\n/** @type {?} */\nMenu.prototype.isPublic;\n/** @type {?} */\nMenu.prototype.roles;\n/** @type {?} */\nMenu.prototype.items;\n/** @type {?} */\nMenu.prototype.position;\n/** @type {?} */\nMenu.prototype.callback;\n/** @type {?} */\nMenu.prototype.disabled;\n/** @type {?} */\nMenu.prototype.icon;\n}\n\nexport class MenuService {\nprivate menus: Menu[];\n  user: IUser;\n/**\n * @return {?}\n */\ngetMenus(): Observable<Menu[]> {\n    return Observable.of(this.menus);\n  }\n/**\n * @param {?} menuId\n * @return {?}\n */\nmenuExists(menuId: string): boolean {\n    this.menus.map(menu => {\n      if (menu.id === menuId) {\n        return true;\n      }\n    });\n    return false;\n  }\n/**\n * @param {?} menuId\n * @return {?}\n */\nvalidateMenuExistence(menuId: string): Menu {\n    let /** @type {?} */ response = null;\n    if (menuId && menuId.length) {\n      this.menus.map(menu => {\n        if (menu.id === menuId) {\n          response = menu;\n        }\n      });\n    }\n    if (response === null) {\n      throw new Error('Menu does not exist: ' + menuId);\n    } else {\n      return response;\n    }\n  }\n/**\n * @param {?} menuId\n * @return {?}\n */\ngetMenu(menuId: string): Menu {\n    // Validate that the menu exists and return it\n    return this.validateMenuExistence(menuId);\n  };\n/**\n * @param {?} menu\n * @return {?}\n */\naddMenu(menu: IMenu) {\n    if (this.menuExists(menu.id)) {\n      throw new Error ('Menu already exists with this id: ' + menu.id);\n    } else {\n      const /** @type {?} */ index = this.menus.push(menu);\n      return this.menus[index - 1];\n    }\n  };\n/**\n * @param {?} menuId\n * @return {?}\n */\nremoveMenu(menuId: string): boolean {\n    // Validate that the menu exists\n    const /** @type {?} */ index = this.menus.findIndex(x => x.id === menuId);\n    if (index > -1) {\n      this.menus.splice(index, 1);\n      return true;\n    } else {\n      return false;\n    }\n  }\n/**\n * @param {?} menu\n * @return {?}\n */\nshouldRender(menu: IMenu): boolean {\n    if (this.user !== null) {\n      if (menu.roles.indexOf('*') > -1) {\n        return true;\n      } else {\n        for (const /** @type {?} */ userRoleIndex of this.user.roles) {\n          for (const /** @type {?} */ roleIndex of menu.roles) {\n            if (menu.roles[ /** @type {?} */((<any>roleIndex))] === this.user.roles[ /** @type {?} */((<any>userRoleIndex))]) {\n              return true;\n            }\n          }\n        }\n      }\n    } else {\n      return menu.isPublic;\n    }\n    return false;\n  }\n/**\n * @param {?} security\n */\nconstructor(security: SecurityService) {\n    this.user = security.user;\n    this.menus = [];\n    const mainMenu = new Menu({\n      id: 'mainMenu',\n      text: 'Menu'});\n    this.menus.push(mainMenu);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SecurityService, },\n];\n}\n\nfunction MenuService_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuService.ctorParameters;\n/** @type {?} */\nMenuService.prototype.menus;\n/** @type {?} */\nMenuService.prototype.user;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}