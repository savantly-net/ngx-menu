{"version":3,"sources":["menu.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAA+B,QAAA,EAAU,QAAA,EAAS,MAAA,eAAA,CAAA;AAC3D,OAAO,EAAE,YAAA,EAAa,MAAA,iBAAA,CAAA;AACtB,OAAO,EAAE,aAAA,EAAc,MAAA,kBAAA,CAAA;AACvB,OAAO,EAAE,WAAA,EAAY,MAAA,gBAAA,CAAA;AACrB,OAAO,EAAE,YAAA,EAAc,eAAA,EAAiB,cAAA,EAAe,MAAA,mBAAA,CAAA;AACvD,OAAO,EAAE,gBAAA,EAAiB,MAAA,sBAAA,CAAA;AAC1B,OAAO,EAAE,cAAA,EAAgB,eAAA,EAAgB,MAAA,wBAAA,CAAA;AACzC,MAEC;IAcD;;OAEG;IACH,YAHgB,YAAe;QAI3B,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CACb,+DAA+D,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAvBH;;;OAGG;IACH,MADG,CAAA,OAAA,CAAA,EAAA,eAAA,GAAA,eAAA,KAEM,EAAC,eAAe,EAAE,IAAI,eAAe,EAAE,EAAC;QAC5C,MAAM,CADC;YAEJ,QAAQ,EADE,UAAA;YAEV,SAAS,EADE,CAAA;oBAEP,OAAO,EADE,WAAA;oBAET,UAAU,EADE,kBAAA;oBAEZ,IAAI,EADE,CAAA,eAAE,CAAe;iBAExB,CADC;SAEL,CADC;IAEN,CAAC;;AAOK,qBAAA,GAAoC;IAI5C,EAHE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAItB,OAAO,EAHE;oBAIP,YAAY;oBACZ,YAAY,EAHE,eAAA,EAAiB,cAAA,EAAgB,gBAAA,EAAkB,cAAA;iBAIlE;gBACD,OAAO,EAHE,CAAA,aAAE,CAAa;gBAIxB,YAAY,EAHE,CAAA,aAAE,CAAa;gBAI7B,SAAS,EAHE,EAAA;aAIZ,EAHC,EAAG;CAIJ,CAHC;AAIF;;GAEG;AAJF,yBAAA,GAAA,MAAA;IAMD,EAAC,IAAI,EAAE,UAPM,EAAA,UAAa,EAAA,CAAA,EAAA,IAAA,EAAA,QAAkB,EAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA;CAQ3C,CAPC;AAUF;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;AAC1B,CAAC;AAED;;;GAGG;AACH,MAnBC,6BAAA,gBAAA;IAoBC,MAAM,CA1BC,IAAI,WAAA,CAAY,gBAAC,CAAgB,CAAC;AA2B3C,CAAC","file":"menu.module.js","sourceRoot":"","sourcesContent":["import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MenuComponent } from './menu.component';\nimport { MenuService } from './menu.service';\nimport { MdMenuModule, MdToolbarModule, MdButtonModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SecurityModule, SecurityService } from '@savantly/ngx-security';\nexport class MenuModule {\n/**\n * @param {?=} __0\n * @return {?}\n */\nstatic forRoot({securityService = SecurityService}: {securityService?: SecurityService}\n       = {securityService: new SecurityService()}): ModuleWithProviders {\n     return {\n        ngModule: MenuModule,\n        providers: [{\n            provide: MenuService,\n            useFactory: menuServiceFactory,\n            deps: [SecurityService]\n          }]\n      };\n  }\n/**\n * @param {?} parentModule\n */\nconstructor (  parentModule: MenuModule) {\n    if (parentModule) {\n      throw new Error(\n        'MenuModule is already loaded. Import it in the AppModule only');\n    }\n  }\n static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    MdMenuModule, MdToolbarModule, MdButtonModule, FlexLayoutModule, SecurityModule\n  ],\n  exports: [MenuComponent],\n  declarations: [MenuComponent],\n  providers: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MenuModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction MenuModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMenuModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMenuModule.ctorParameters;\n}\n\n/**\n * @param {?=} _securityService\n * @return {?}\n */\nexport function menuServiceFactory(_securityService?: SecurityService): MenuService {\n  return new MenuService(_securityService);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}